/*
    Практическое задание по теме “Транзакции, переменные, представления”

1. 	В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. 
	Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. 
	Используйте транзакции.
2. 	Создайте представление, которое выводит название name товарной позиции из таблицы 
	products и соответствующее название каталога name из таблицы catalogs.
3.  (по желанию) Пусть имеется таблица с календарным полем created_at. 
	В ней размещены разряженые календарные записи за август 2018 года 
	'2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. 
	Составьте запрос, который выводит полный список дат за август, выставляя в соседнем поле значение 1, 
	если дата присутствует в исходном таблице и 0, если она отсутствует.
4.  (по желанию) Пусть имеется любая таблица с календарным полем created_at. Создайте запрос, 
	который удаляет устаревшие записи из таблицы, оставляя только 5 самых свежих записей.
 */


/* Задача 1
1. 	В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. 
	Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. 
	Используйте транзакции.
**/

use sample;

START TRANSACTION;

INSERT INTO users SELECT * FROM shop.users u WHERE u.id =1;

COMMIT;


/* 
    2. 	Создайте представление, которое выводит название name товарной позиции из таблицы 
	products и соответствующее название каталога name из таблицы catalogs.
 */

#Т.е. нет в задании упоминания, какую связизь исспользовать, то исспользую внутреннее соединение.

use shop;

CREATE OR REPLACE ALGORITHM = UNDEFINED VIEW view_catalogs 
AS 
select c.name as `Наименование каталога`,p.name `Наименование товара` 
from catalogs c inner join products p on c.id = p.catalog_id order by c.name, p.name;

#Query OK, 0 rows affected (0.00 sec)

select * from view_catalogs;
#+-------------------------------------------+---------------------------------------+
#| Наименование каталога                     | Наименование товара                   |
#+-------------------------------------------+---------------------------------------+
#| Материнские платы                         | ASUS ROG MAXIMUS X HERO               |
#| Материнские платы                         | Gigabyte H310M S2H                    |
#| Материнские платы                         | MSI B250M GAMING PRO                  |
#| Процессоры                                | AMD FX-8320                           |
#| Процессоры                                | AMD FX-8320E                          |
#| Процессоры                                | Intel Core i3-8100                    |
#| Процессоры                                | Intel Core i5-7400                    |
#+-------------------------------------------+---------------------------------------+
#7 rows in set (0.00 sec)

/*
3.  (по желанию) Пусть имеется таблица с календарным полем created_at. 
	В ней размещены разряженые календарные записи за август 2018 года 
	'2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. 
	Составьте запрос, который выводит полный список дат за август, выставляя в соседнем поле значение 1, 
	если дата присутствует в исходном таблице и 0, если она отсутствует.
*/

#запрос не проверял дожен работать
select tbl.*, IF(ad.created_at is NULL;0;1) as `Разрешен`
from my_tbl tbl 
	left join allowed_date ad on tbl.created_at=ad.created_at
where Month(tbl.created_at)=8 #За август, других ограничений нет.


/*
4.  (по желанию) Пусть имеется любая таблица с календарным полем created_at. Создайте запрос, 
	который удаляет устаревшие записи из таблицы, оставляя только 5 самых свежих записей.
*/







